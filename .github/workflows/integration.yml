name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - staging

jobs:
  dbt:
    runs-on: ubuntu-latest
    environment: integration_test

    services:
      postgres:
        image: postgis/postgis:16-3.5-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out repository code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.5

    - name: Create Python virtual environment
      run: python3 -m venv dbt-env

    - name: Activate virtual environment and install dependencies
      run: |
        source dbt-env/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: |
        source dbt-env/bin/activate
        echo "POSTGRES_DB=postgres" >> $GITHUB_ENV
        echo "POSTGRES_HOST=localhost" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=postgres" >> $GITHUB_ENV
        echo "POSTGRES_PORT=5432" >> $GITHUB_ENV
        echo "POSTGRES_USER=postgres" >> $GITHUB_ENV

    - name: Install PostGIS extensions
    
      run: |
        source dbt-env/bin/activate
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB -c "CREATE EXTENSION IF NOT EXISTS postgis;"

    - name: Install unnaccent extensions
      run: |
        source dbt-env/bin/activate
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB -c "CREATE EXTENSION IF NOT EXISTS unaccent;"

    - name: delete "prep" schemas if exists
      run: |
        source dbt-env/bin/activate
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB -c "DROP SCHEMA IF EXISTS prep CASCADE;"


    - name: delete "prepare" schemas if exists
      run: |
        source dbt-env/bin/activate
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB -c "DROP SCHEMA IF EXISTS prepare CASCADE;"

    
    - name: delete "intermediaires" schemas if exists
      run: |
        source dbt-env/bin/activate
        psql postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB -c "DROP SCHEMA IF EXISTS intermediaires CASCADE;"


    - name: Set DBT_PROFILES_DIR
      run: echo "DBT_PROFILES_DIR=." >> $GITHUB_ENV

    - name: check dbt project
      run: |
        source dbt-env/bin/activate
        dbt debug

    - name: Load data from storage to tables in DB
      run: |
        source dbt-env/bin/activate
        python -m load
        
    - name: Run dbt deps
      run: |
        source dbt-env/bin/activate
        dbt deps

    - name: Run dbt seed
      run: |
        source dbt-env/bin/activate
        dbt seed

    - name: Run dbt run
      run: |
        source dbt-env/bin/activate
        dbt run

    - name: Run dbt test
      run: |
        source dbt-env/bin/activate
        dbt test


    - name: delete "prep" schemas if exists
      run: |
        source dbt-env/bin/activate
        psql postgresql://${{  secrets.CI_POSTGRES_USER  }}:${{  secrets.CI_POSTGRES_PASSWORD  }}@${{  secrets.CI_POSTGRES_HOST  }}:${{  secrets.CI_POSTGRES_PORT  }}/${{  secrets.CI_POSTGRES_DB  }} -c "DROP SCHEMA IF EXISTS prep CASCADE;"
